package hexapodsimulator;

import javax.swing.table.AbstractTableModel;

/**
 * Dialog for editing sequences
 * @author peter
 */
public class SequenceEditorDialog extends javax.swing.JDialog {

    HexiSequenz _sequence;
    private int valueCount;
    private boolean cancelled = true;

    class TableModelImpl extends AbstractTableModel {

        public int getRowCount() {
            return _sequence.getLength();
        }

        public int getColumnCount() {
            return valueCount + 1;
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            return columnIndex == 0
                    ? (long) (rowIndex * _sequence.getTime() / _sequence.getLength())
                    : _sequence.getAngle(rowIndex)[columnIndex - 1];
        }

        @Override
        public String getColumnName(int column) {
            return column == 0 ? "Time (ms)" : column == 1 ? "Angle 0" : "Angle 1";
        }

        @Override
        public boolean isCellEditable(int row, int col) {
            return col == 0 ? false : true;
        }

        @Override
        public void setValueAt(Object value, int row, int col) {
            //TODO check whether entered values are in the valid range
            double valueD = Double.parseDouble((String) value);
            if ((valueCount == 1 && (valueD < -45 || valueD > 45))
                    || (valueCount == 2 && col == 1 && (valueD < -63.3 || valueD > 102.8))
                    || (valueCount == 2 && col == 2 && (valueD < -24 || valueD > 149.9))) {
                return;
            }

            HexiSequenz changedSequence = new HexiSequenz();
            for (int i = 0; i < _sequence.getLength(); i++) {
                if (i == row) {
                    if (col == 1) {
                        changedSequence.addContent(valueD, _sequence.getAngle(i)[1]);
                    } else {
                        changedSequence.addContent(_sequence.getAngle(i)[0], valueD);
                    }
                } else {
                    changedSequence.addContent(_sequence.getAngle(i));
                }
            }
            changedSequence.setName(_sequence.getName());
            changedSequence.setTime(_sequence.getTime());
            _sequence = changedSequence;
        }
    }

    /** Creates new form SequenceEditorDialog */
    public SequenceEditorDialog(java.awt.Frame parent, HexiSequenz sequence) {
        super(parent, "Sequence Editor", true);
        initComponents();
        // make a deep copy so that it is possible to revert the old object
        _sequence = (HexiSequenz) DeepObjectCopy.getDeepCopy(sequence);
        valueCount = (sequence.getName().split("_")[0].equals("combc") || sequence.getName().split("_")[0].equals("c"))
                ? 1 : 2;
        table.setModel(new TableModelImpl());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        cleanButton = new javax.swing.JButton();
        normalizeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        cleanButton.setText("Clean");
        cleanButton.setToolTipText("Remove repeated values.");
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        normalizeButton.setText("Normalize");
        normalizeButton.setToolTipText("Remove all values apart from local min/max values.");
        normalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalizeButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.setToolTipText("Insert a new value below the selected row.");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setToolTipText("Delete the selected row(s).");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 222, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(deleteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jSeparator2)
                            .add(cleanButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(normalizeButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(saveButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 247, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(37, 37, 37)
                        .add(cleanButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(normalizeButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(addButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteButton)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(saveButton)
                    .add(cancelButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        cancelled = false;
        dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanButtonActionPerformed
        _sequence.clean();
        table.setModel(new TableModelImpl());
    }//GEN-LAST:event_cleanButtonActionPerformed

    private void normalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalizeButtonActionPerformed
        _sequence.normalize(0);
        table.setModel(new TableModelImpl());
    }//GEN-LAST:event_normalizeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int index = table.getSelectedRow() != -1 ? table.getSelectedRow() : table.getRowCount() - 1;
        HexiSequenz changedSequence = new HexiSequenz();
        for (int i = 0; i < _sequence.getLength(); i++) {
            changedSequence.addContent(_sequence.getAngle(i));
            if (i == index) {
                changedSequence.addContent(new double[2]);
            }
        }
        changedSequence.setName(_sequence.getName());
        changedSequence.setTime(_sequence.getTime());
        _sequence = changedSequence;
        table.setModel(new TableModelImpl());
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (table.getRowCount() == 1) {
            return;
        }
        int[] indices = table.getSelectedRows();
        _sequence.remContent(indices);
        table.setModel(new TableModelImpl());
    }//GEN-LAST:event_deleteButtonActionPerformed

    public boolean isCancelled() {
        return cancelled;
    }

    public HexiSequenz getEditedSequence() {
        return _sequence;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cleanButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton normalizeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
